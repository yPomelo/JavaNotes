1、构造函数：对象一旦建立就会调用与之对应的构造函数
2、构造代码块：
    作用：给对象进行初始化
    对象一建立就运行，且优先于构造函数执行
    和构造函数的区别：构造代码块是给所有对象进行统一初始化
    而构造函数是给对应对象初始化

3、this关键字：this代表它所在函数所属对象的引用
简单说：哪个对象在调用this所在的函数，this就代表哪个对象（每个教师又一张椅子属于老师，谁过来上课，椅子属于谁）

4、this的应用：当定义类中功能时，该函数内部要用到调用该函数的对象时，这时用this来表示这个对象。
（看到this想到：这是一个对象的引用，this和p1的地址值相同，指向了同一个对象）

5、this语句 this()：构造函数之间相互调用只能用给this语句 this语句只能定义在构造函数的第一行，因为初始化要先执行
this语句不能用在一般函数中

6、静态static：用于修饰成员（成员变量、成员函数），静态修饰内容被对象所共享，当成员被静态修饰后，就对了一个调用方式，除了可以被对象调用之外，还可以被类名直接调用。
类名.静态成员

7、static的特点
    1.随着类的加载而加载，也就是说静态会随着类的消失而消失。说明它的生命周期最长
    2.优先于对象存在，静态先存在，对象后存在
    3.被所有对象共享
    4.可以被类名直接调用

8、实例变量（成员变量）和类变量（静态成员变量）的区别：
    1.存放位置：类变量随着类的加载存放在方法区当中
               实例变量随着对象的建立而存在于堆内存当中
    2.生命周期：类变量生命周期最长，随着类的消失而消失
               实例变量生命周期随着对象的消失而消失

9、静态使用注意事项：
    1.静态方法只能访问静态成员（静态方法静态变量）。非静态方案既可以访问静态也可以访问非静态。
    2.静态方法中不可以定义this，super关键字。因为静态优先于对象存在，所以静态方法中不可以出现this、super
    3.主函数是静态的
        主函数：是一个特殊的函数，作为程序的入口，可以被jvm调用。

        主函数的定义：
        public：代表该函数的访问权限是最大的
        static：代表主函数随着类的加载就已经存在了
        void：主函数没有具体的返回值
        main：不是关键字，但是是一个特殊的单词，可以被jvm识别
        函数的参数：（String[] args），是一个数组，字符串类型的数组
        主函数是固定格式的：jvm识别
        jvm在调用主函数时，传入的是new String[0]
        java +类名 +参数
10、静态有利有弊
    1.利：对对象的共享数据进行单独空间的存储，节省空间。没有必要每个对象中都存储一份。
          可以直接被类名调用。
    2.弊：生命周期过长
          访问出现局限性（静态虽好，只能访问静态）

11、什么时候使用静态static？
    要从两方面下手（因为静态修饰的内容有成员变量和函数）：
    1.什么时候定义静态变量：当对象中出现共享数据时，该数据被静态所修饰，存在于共享区，特有数据要定义成非静态，存在于堆内存中。
    2.什么时候定义静态函数：当功能内部没有访问到非静态数据（对象的特有数据），那么该功能可以定义成静态。

    